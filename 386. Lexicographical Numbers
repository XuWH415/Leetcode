Given an integer n, return 1 - n in lexicographical order.

For example, given 13, return: [1,10,11,12,13,2,3,4,5,6,7,8,9].

Please optimize your algorithm to use less time and space. The input size may be as large as 5,000,000.



--------------------------------------------------------------------------------------------------------------------------------------



*** Python ***

class Solution(object):
    def lexicalOrder(self, n):
        """
        :type n: int
        :rtype: List[int]
        """
        if n <= 0:
            return []
            
        def recur(pre, n, r):
            temp = 10 * pre
            for i in xrange(10):    # use xrange() in python 2.x
                if temp + i <= n:
                    r.append(temp + i)
                    recur(temp + i, n, r)
                else:
                    return
        
        r = []
        for i in xrange(1, 10):
            if i <= n:
                r.append(i)
                recur(i, n, r)
            else:
                break
        
        
        return r
