Given a linked list, remove the nth node from the end of list and return its head.

For example,

   Given linked list: 1->2->3->4->5, and n = 2.

   After removing the second node from the end, the linked list becomes 1->2->3->5.
   
Note:
Given n will always be valid.
Try to do this in one pass.

Tags: Linked List, Two Pointers



--------------------------------------------------------------------------------------------------------------------------------------



*** Python ***

# Definition for singly-linked list.
# class ListNode(object):
#     def __init__(self, x):
#         self.val = x
#         self.next = None

class Solution(object):
    def removeNthFromEnd(self, head, n):
        """
        :type head: ListNode
        :type n: int
        :rtype: ListNode
        """
        if not head:
            return head
        
        p0 = p1 = p2 = head
        count = 0
        while p2 != None:
            if p1 != head:
                p0 = p0.next
            if count >= n:
                p1 = p0.next
            p2 = p2.next
            count += 1
        
        if p1 == head:
            return p1.next
        else:
            p0.next = p1.next
            return head
