Given two integers n and k, return all possible combinations of k numbers out of 1 ... n.

For example,
If n = 4 and k = 2, a solution is:

[
  [2,4],
  [3,4],
  [2,3],
  [1,2],
  [1,3],
  [1,4],
]

Tags: Backtracking
Similar Problems: (M) Combination Sum, (M) Permutations



----------------------------------------------------------------------------------------------------------------------------------------



*** Python ***

# Recursive Call
class Solution(object):
    def combine(self, n, k):
        """
        :type n: int
        :type k: int
        :rtype: List[List[int]]
        """
        def solver(nums, k, i):
            if k < 1:
                return [[]]
            
            result = []
            for j in range(i, len(nums)):
                nextresult = solver(nums, k - 1, j + 1)
                for r in nextresult:
                    r.append(nums[j])
                    result.append(r)
            
            return result
        
        if n < k:
            return []
        
        return solver([x for x in range(1, n + 1)], k, 0)
