Follow up for "Unique Paths":

Now consider if some obstacles are added to the grids. How many unique paths would there be?

An obstacle and empty space is marked as 1 and 0 respectively in the grid.

For example,
There is one obstacle in the middle of a 3x3 grid as illustrated below.

[
  [0,0,0],
  [0,1,0],
  [0,0,0]
]
The total number of unique paths is 2.

Note: m and n will be at most 100.

Tags: Array, Dynamic Programming
Similar Problems: (M) Unique Paths



-----------------------------------------------------------------------------------------------------------------------------------------



*** Python ***

class Solution(object):
    def uniquePathsWithObstacles(self, obstacleGrid):
        """
        :type obstacleGrid: List[List[int]]
        :rtype: int
        """
        def solver(m, n, row, col, grid, d):
            if grid[m][n] == 1: # current position is an obstacle, stop
                return 0
                
            if m == (row - 1) and n == (col - 1):   # reach to the end
                return 1
            
            if (m, n) in d: # current position has been already calculated
                return d[m, n]
            
            down = right = 0
            if m < (row - 1):   # can go down
                down = solver(m + 1, n, row, col, grid, d)
            if n < (col - 1):   # can go right
                right = solver(m, n + 1, row, col, grid, d)
            
            d[m, n] = down + right
            
            return d[m, n]
            
        d = dict()
        
        return solver(0, 0, len(obstacleGrid), len(obstacleGrid[0]), obstacleGrid, d)
