Find the contiguous subarray within an array (containing at least one number) which has the largest sum.

For example, given the array [-2,1,-3,4,-1,2,1,-5,4],
the contiguous subarray [4,-1,2,1] has the largest sum = 6.

click to show more practice.

Tags: Array, Dynamic Programming, Divide and Conquer
Similar Problems: (E) Best Time to Buy and Sell Stock, (M) Maximum Product Subarray



----------------------------------------------------------------------------------------------------------------------------------------



*** Python ***

class Solution(object):
    def maxSubArray(self, nums):
        """
        :type nums: List[int]
        :rtype: int
        """
        if not nums:
            return 0
            
        maxsub = -float('inf')
        temp = -float('inf')    # max sum of subarray end by i
        for i in range(len(nums)):
            temp = max(nums[i], temp + nums[i]) # either join the previous subarray or start from itself
            maxsub = max(maxsub, temp)  # record max
        
        return maxsub
