Given a 2d grid map of '1's (land) and '0's (water), count the number of islands. An island is surrounded by water and is formed by connecting adjacent lands horizontally or vertically. You may assume all four edges of the grid are all surrounded by water.

Example 1:
    11110
    11010
    11000
    00000
    Answer: 1

Example 2:
    11000
    11000
    00100
    00011
    Answer: 3

Credits:
Special thanks to @mithmatt for adding this problem and creating all test cases.

Tags: Depth-first Search, Breadth-first Search, Union Find
Similar Problems: (M) Surrounded Regions, (M) Walls and Gates, (H) Number of Islands II, (M) Number of Connected Components in an Undirected Graph



--------------------------------------------------------------------------------------------------------------------------------------



*** Python ***

class Solution(object):
    def numIslands(self, grid):
        """
        :type grid: List[List[str]]
        :rtype: int
        """
        if not grid:
            return 0
        
        def recur(grid, row, col, i, j, s): # DFS, mark all adjacent 1's
            if s[i][j]:
                s[i][j] = False
            else:
                return
                
            if i != 0 and grid[i - 1][j] == '1':
                recur(grid, row, col, i - 1, j, s)
            if i != (row - 1) and grid[i + 1][j] == '1':
                recur(grid, row, col, i + 1, j, s)
            if j != 0 and grid[i][j - 1] == '1':
                recur(grid, row, col, i, j - 1, s)
            if j != (col - 1) and grid[i][j + 1] == '1':
                recur(grid, row, col, i, j + 1, s)
        
        row = len(grid)
        col = len(grid[0])
        count = 0
        s = [[True] * col for i in range(row)]
        
        for i in range(row):
            for j in range(col):
                if grid[i][j] == '1' and s[i][j]:   # add value of count when find an unmarked 1
                    count += 1
                    recur(grid, row, col, i, j, s)
                        
        return count
