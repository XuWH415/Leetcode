All DNA is composed of a series of nucleotides abbreviated as A, C, G, and T, for example: "ACGAATTCCG". When studying DNA, it is sometimes useful to identify repeated sequences within the DNA.

Write a function to find all the 10-letter-long sequences (substrings) that occur more than once in a DNA molecule.

For example:
    Given s = "AAAAACCCCCAAAAACCCCCCAAAAAGGGTTT"
    Return: ["AAAAACCCCC", "CCCCCAAAAA"].

Tags: Hash Table, Bit Manipulation



--------------------------------------------------------------------------------------------------------------------------------------



*** Python ***

class Solution(object):
    def findRepeatedDnaSequences(self, s):
        """
        :type s: str
        :rtype: List[str]
        """
        ans = []
        valCnt = dict()
        m = {'A' : 0, 'C' : 1, 'G': 2, 'T' : 3}
        code = 0
        for i in range(len(s)):
            code = (code * 4 + m[s[i]]) & 0xFFFFF
            if i < 9:
                continue
            else:
                valCnt[code] = valCnt.get(code, 0) + 1
                if valCnt[code] == 2:
                    ans.append(s[i - 9 : i + 1])
        return ans
