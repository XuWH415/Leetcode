Given an array of integers, return indices of the two numbers such that they add up to a specific target.

You may assume that each input would have exactly one solution.

Example:
Given nums = [2, 7, 11, 15], target = 9,

Because nums[0] + nums[1] = 2 + 7 = 9,
return [0, 1].

UPDATE (2016/2/13):
The return format had been changed to zero-based indices. Please read the above updated description carefully.

Tags: Array, Hash Table
Similar Problems: (M) 3Sum, (M) 4Sum, (M) Two Sum II - Input array is sorted, (E) Two Sum III - Data structure design



--------------------------------------------------------------------------------------------------------------------------------------



*** Python ***

class Solution(object):
    def twoSum(self, nums, target):
        """
        :type nums: List[int]
        :type target: int
        :rtype: List[int]
        """
        d = dict()
        for i in range(len(nums)):
            if nums[i] not in d:
                if (target - nums[i]) in d:
                    return [d[target - nums[i]], i]
                else:
                    d[nums[i]] = i
            else:
                if target == (nums[i] << 1):
                    return [d[nums[i]], i]
        
        return []
