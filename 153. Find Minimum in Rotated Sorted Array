Suppose an array sorted in ascending order is rotated at some pivot unknown to you beforehand.

(i.e., 0 1 2 4 5 6 7 might become 4 5 6 7 0 1 2).

Find the minimum element.

You may assume no duplicate exists in the array.

Tags: Array, Binary Search
Similar Problems: (M) Search in Rotated Sorted Array, (H) Find Minimum in Rotated Sorted Array II



----------------------------------------------------------------------------------------------------------------------------------------



*** Python ***

class Solution(object):
    def findMin(self, nums):
        """
        :type nums: List[int]
        :rtype: int
        """
        if not nums:
            return None
        
        i, j = 0, len(nums) - 1
        while i < j:
            m = (i + j) // 2
            if nums[i] < nums[j]:
                return nums[i]
            elif nums[i] <= nums[m]:
                i = m + 1
            else:
                j = m
                
        return nums[i]
