Given a binary tree, return the zigzag level order traversal of its nodes' values. (ie, from left to right, then right to left for the next level and alternate between).

For example:
Given binary tree [3,9,20,null,null,15,7],
    3
   / \
  9  20
    /  \
   15   7
return its zigzag level order traversal as:
[
  [3],
  [20,9],
  [15,7]
]

Tags: Tree, Breadth-first Search, Stack
Similar Problems: (E) Binary Tree Level Order Traversal



----------------------------------------------------------------------------------------------------------------------------------------



*** Python ***

# Definition for a binary tree node.
# class TreeNode(object):
#     def __init__(self, x):
#         self.val = x
#         self.left = None
#         self.right = None
class Solution(object):
    def zigzagLevelOrder(self, root):
        """
        :type root: TreeNode
        :rtype: List[List[int]]
        """
        if not root:
            return []
        
        level = [root]
        result = []
        i = 1
        while level:
            r = [x.val for x in level]
            nextlevel = []
            for j in range(len(level) - 1, -1, -1):
                if i:
                    if level[j].right:
                        nextlevel.append(level[j].right)
                    if level[j].left:
                        nextlevel.append(level[j].left)
                else:
                    if level[j].left:
                        nextlevel.append(level[j].left)
                    if level[j].right:
                        nextlevel.append(level[j].right)
            i = i ^ 1
            result.append(r)
            level = nextlevel
        
        return result
