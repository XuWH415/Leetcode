Given a collection of distinct numbers, return all possible permutations.

For example,
[1,2,3] have the following permutations:
[
  [1,2,3],
  [1,3,2],
  [2,1,3],
  [2,3,1],
  [3,1,2],
  [3,2,1]
]
Subscribe to see which companies asked this question

Tags: Backtracking
Similar Problems: (M) Next Permutation, (M) Permutations II, (M) Permutation Sequence, (M) Combinations



----------------------------------------------------------------------------------------------------------------------------------------



*** Python ***

class Solution(object):
    def permute(self, nums):
        """
        :type nums: List[int]
        :rtype: List[List[int]]
        """
        if len(nums) < 2:
            return [nums]
        
        result = []
        
        for i in range(len(nums)):
            newnums = nums[:i] + nums[i + 1:]
            pmt = self.permute(newnums)
            for j in pmt:
                j.append(nums[i])
                result.append(j)
        
        return result
