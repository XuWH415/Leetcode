Given a string S, find the longest palindromic substring in S. You may assume that the maximum length of S is 1000, and there exists one unique longest palindromic substring.

Tags: String
Similar Problems: (H) Shortest Palindrome, (E) Palindrome Permutation, (H) Palindrome Pairs



--------------------------------------------------------------------------------------------------------------------------------------



*** Python ***

### Dynamic Programming: Time Limit Exceed
class Solution(object):
    def longestPalindrome(self, s):
        """
        :type s: str
        :rtype: str
        """
        if not s:
            return ''
        
        maxlen, record = 1, 0
        d = [[False] * len(s) for x in range(len(s))]
        
        for i in xrange(len(s) - 1, -1, -1):
            for j in xrange(i, len(s)):
                d[i][j] = (s[i] == s[j] and ((i + 1) >= j or d[i + 1][j - 1]))
                if d[i][j] and maxlen < (j - i + 1):
                        maxlen= j - i + 1
                        record = i
        
        return s[record:record + maxlen]

### Expand Around Center:
class Solution(object):
    def longestPalindrome(self, s):
        """
        :type s: str
        :rtype: str
        """
        if not s:
            return ''
        
        def findPalindrome(s, i, j):
            l = 0
            if i == j:
                l = -1
            while i >= 0 and j < len(s):
                if s[i] == s[j]:
                    l += 2
                    i -= 1
                    j += 1
                else:
                    break
            
            return l
        
        maxlen = 1
        record = 0
        for i in range(len(s) - 1):
            l1 = findPalindrome(s, i, i)
            l2 = findPalindrome(s, i, i + 1)
            if l1 > l2:
                if l1 > maxlen:
                    maxlen = l1
                    record = i - l1 // 2
            else:
                if l2 > maxlen:
                    maxlen = l2
                    record = i - l2 // 2 + 1
                
        return s[record:record + maxlen]
