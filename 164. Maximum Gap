Given an unsorted array, find the maximum difference between the successive elements in its sorted form.

Try to solve it in linear time/space.

Return 0 if the array contains less than 2 elements.

You may assume all elements in the array are non-negative integers and fit in the 32-bit signed integer range.

Credits:
Special thanks to @porker2008 for adding this problem and creating all test cases.

Tags: Sort

Reference: https://leetcode.com/articles/maximum-gap/



----------------------------------------------------------------------------------------------------------------------------------------



*** Python ***

### Bucket-sort
class Solution(object):
    def maximumGap(self, nums):
        """
        :type nums: List[int]
        :rtype: int
        """
        if not nums:
            return 0
        
        nums = list(set(nums))
        if len(nums) == 1:
            return 0
            
        minnums = min(nums)
        maxnums = max(nums)
        gap = (maxnums - minnums) // (len(nums) - 1)
        numOfGap = (maxnums - minnums) // gap + 1
        
        minarray = [i * gap for i in range(1, numOfGap + 1)]
        maxarray = [i * gap for i in range(numOfGap)]
        
        for n in nums:
            i = (n - minnums) // gap
            minarray[i] = min(minarray[i], n - minnums)
            maxarray[i] = max(maxarray[i], n - minnums)
        
        maxgap = 0
        lastmax = None
        for i in range(numOfGap):
            if maxarray[i] >= minarray[i]:
                if lastmax != None:
                    maxgap = max(maxgap, minarray[i] - lastmax)
                lastmax = maxarray[i]
        
        return maxgap
